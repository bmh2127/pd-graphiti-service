apiVersion: v1
kind: Service
metadata:
  name: pd-graphiti-service
  namespace: pd-graphiti
  labels:
    app.kubernetes.io/name: pd-graphiti-service
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: pd-graphiti-platform
  annotations:
    # Prometheus scraping annotations
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app.kubernetes.io/name: pd-graphiti-service
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: metrics
    port: 8001
    targetPort: 8001
    protocol: TCP
  type: ClusterIP
  sessionAffinity: None

---
# Optional: LoadBalancer service for direct access
apiVersion: v1
kind: Service
metadata:
  name: pd-graphiti-service-lb
  namespace: pd-graphiti
  labels:
    app.kubernetes.io/name: pd-graphiti-service
    app.kubernetes.io/component: api
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"  # AWS NLB
    # service.beta.kubernetes.io/azure-load-balancer-internal: "true"  # Azure internal LB
    # cloud.google.com/load-balancer-type: "Internal"  # GCP internal LB
spec:
  selector:
    app.kubernetes.io/name: pd-graphiti-service
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP
  - name: metrics
    port: 8001
    targetPort: 8001
    protocol: TCP
  type: LoadBalancer
  # loadBalancerSourceRanges:  # Restrict access to specific IP ranges
  # - "10.0.0.0/8"
  # - "172.16.0.0/12"