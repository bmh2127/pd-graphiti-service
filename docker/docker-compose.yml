# Production-ready PD Graphiti Service Stack
version: '3.8'

networks:
  pd-graphiti-network:
    driver: bridge
    name: pd-graphiti-network

services:
  neo4j:
    image: neo4j:5.26.2
    container_name: pd-neo4j
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO- http://localhost:7474 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    ports:
      - "${NEO4J_HTTP_PORT:-7475}:7474" # HTTP (use 7475 by default to avoid conflicts)
      - "${NEO4J_BOLT_PORT:-7688}:7687" # Bolt (use 7688 by default to avoid conflicts)
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-testpassword123}
      - NEO4J_dbms_default__database=${NEO4J_DATABASE:-neo4j}
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_security_procedures_unrestricted=gds.*,apoc.*
      - NEO4J_dbms_security_procedures_allowlist=gds.*,apoc.*
      - NEO4J_dbms_connector_bolt_listen__address=0.0.0.0:7687
      - NEO4J_dbms_connector_http_listen__address=0.0.0.0:7474
    networks:
      - pd-graphiti-network
    user: "7474:7474"
    read_only: false
    security_opt:
      - no-new-privileges:true
    ulimits:
      nofile:
        soft: 40000
        hard: 40000

  pd-graphiti-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: pd-graphiti-service
    restart: unless-stopped
    ports:
      - "${SERVICE_PORT:-8002}:8000"
      - "${METRICS_PORT:-8003}:8001"
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:8000/health/live', timeout=10)",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      # Required API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY:?OPENAI_API_KEY is required}
      
      # Database Configuration
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-testpassword123}
      
      # Application Configuration
      - GRAPHITI_GROUP_ID=${GRAPHITI_GROUP_ID:-pd_target_discovery}
      - EXPORT_DIRECTORY=/app/exports
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - ENABLE_REQUEST_LOGGING=${ENABLE_REQUEST_LOGGING:-true}
      
      # Monitoring Configuration
      - ENABLE_MONITORING=${ENABLE_MONITORING:-true}
      - ENABLE_PROMETHEUS=${ENABLE_PROMETHEUS:-true}
      - METRICS_PATH=${METRICS_PATH:-/metrics}
      
      # Service Configuration
      - HOST=0.0.0.0
      - PORT=8000
      - METRICS_PORT=8001
      
      # OpenAI Configuration
      - MODEL_NAME=${MODEL_NAME:-gpt-4o-mini}
      - SMALL_MODEL_NAME=${SMALL_MODEL_NAME:-gpt-4o-mini}
      
      # Production Settings
      - PYTHONPATH=/app/src
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      # Export data (read-only mount)
      - type: bind
        source: ${EXPORT_SOURCE_PATH:-../pd-target-identification/src/exports}
        target: /app/exports
        read_only: true
      
      # Application logs
      - pd_graphiti_logs:/app/logs
      
      # Application data (for any temporary files)
      - pd_graphiti_data:/app/data
    networks:
      - pd-graphiti-network
    user: "1001:1001"
    read_only: false
    security_opt:
      - no-new-privileges:true
    mem_limit: 2g
    mem_reservation: 1g
    cpus: "1.0"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

volumes:
  # Neo4j persistent data
  neo4j_data:
    driver: local
    name: pd-neo4j-data
  
  neo4j_logs:
    driver: local
    name: pd-neo4j-logs
  
  neo4j_import:
    driver: local
    name: pd-neo4j-import
  
  neo4j_plugins:
    driver: local
    name: pd-neo4j-plugins
  
  # Application persistent data
  pd_graphiti_logs:
    driver: local
    name: pd-graphiti-logs
  
  pd_graphiti_data:
    driver: local
    name: pd-graphiti-data
